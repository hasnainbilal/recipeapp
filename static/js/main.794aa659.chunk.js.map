{"version":3,"sources":["components/Recipe.js","components/Spinner.js","App.js","reportWebVitals.js","index.js"],"names":["Recipe","title","calories","image","ingredients","className","map","ingredient","text","src","alt","Spinner","role","App","useState","recipes","setRecipies","search","setSearch","query","setQuery","spin","setSpin","useEffect","getRecipes","a","fetch","response","json","data","hits","setInterval","console","log","onSubmit","event","preventDefault","type","value","placeholder","onChange","target","recipe","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAiBeA,MAff,YAAqD,IAApCC,EAAmC,EAAnCA,MAAMC,EAA6B,EAA7BA,SAASC,EAAoB,EAApBA,MAAMC,EAAc,EAAdA,YAClC,OACI,sBAAKC,UAAU,SAAf,UACI,6BAAKJ,IACL,6BACKG,EAAYE,KAAI,SAAAC,GAAU,OACvB,6BAAKA,EAAWC,YAGxB,iDAAoBN,KACpB,qBAAKO,IAAKN,EAAOO,IAAKT,QCWnBU,MArBf,WACI,OAEI,qBAAKN,UAAU,UAAf,SACA,mCACI,qBAAKA,UAAU,yBAAyBO,KAAK,SAA7C,SACI,sBAAMP,UAAU,UAAhB,0BAGJ,qBAAKA,UAAU,yBAAyBO,KAAK,SAA7C,SACI,sBAAMP,UAAU,UAAhB,0BAGJ,qBAAKA,UAAU,yBAAyBO,KAAK,SAA7C,SACI,sBAAMP,UAAU,UAAhB,gC,wBCoDDQ,MA5Df,WACE,IADa,EAIeC,mBAAS,IAJxB,mBAINC,EAJM,KAIEC,EAJF,OAKYF,mBAAS,IALrB,mBAKNG,EALM,KAKCC,EALD,OAMUJ,mBAAS,WANnB,mBAMNK,EANM,KAMAC,EANA,OAOQN,oBAAS,GAPjB,mBAONO,EAPM,KAODC,EAPC,KASbC,qBAAU,WACRC,MACA,CAACL,IAED,IAAMK,EAAU,uCAAG,8BAAAC,EAAA,sEACIC,MAAM,mCAAD,OAAoCP,EAApC,mBAbf,WAae,oBAZd,qCAWK,cACbQ,EADa,gBAEAA,EAASC,OAFT,OAEbC,EAFa,OAGnBb,EAAYa,EAAKC,MACjBC,YAAYT,GAAQ,GAAO,KAC3BU,QAAQC,IAAIJ,EAAKC,MALE,2CAAH,qDAgBlB,OACE,sBAAKzB,UAAU,MAAf,UACE,uBAAMA,UAAU,cAAc6B,SATd,SAACC,GACnBA,EAAMC,iBACNhB,EAASH,GACTC,EAAU,IACVI,GAAQ,IAKN,UACE,uBACEjB,UAAU,aACVgC,KAAK,OACLC,MAAOrB,EACPsB,YAAY,4BACZC,SAhBY,SAACL,GAAD,OAAWjB,EAAUiB,EAAMM,OAAOH,UAkBhD,wBAAQjC,UAAU,gBAAgBgC,KAAK,SAAvC,uBAEF,qBAAKhC,UAAU,QAAf,SAEKgB,EAAO,cAAC,EAAD,IACRN,EAAQT,KAAI,SAAAoC,GAAM,OAChB,cAAC,EAAD,CAEEzC,MAAOyC,EAAOA,OAAOC,MACrBzC,SAAUwC,EAAOA,OAAOxC,SACxBC,MAAOuC,EAAOA,OAAOvC,MACrBC,YAAasC,EAAOA,OAAOtC,aAJtBsC,EAAOA,OAAOC,gBC1ClBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,EAAgBZ,QAAQC,O","file":"static/js/main.794aa659.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Recipe({title,calories,image,ingredients}) {\r\n    return (\r\n        <div className=\"recipe\">\r\n            <h1>{title}</h1>\r\n            <ul>\r\n                {ingredients.map(ingredient => (\r\n                    <li>{ingredient.text}</li>   \r\n                ))}\r\n            </ul>\r\n            <p>Total Calories: {calories}</p>\r\n            <img src={image} alt={title} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Recipe;\r\n","import React from 'react';\r\n\r\nfunction Spinner() {\r\n    return (\r\n        \r\n        <div className=\"spinner\">\r\n        <center>\r\n            <div className=\"spinner-grow text-dark\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n\r\n            <div className=\"spinner-grow text-dark\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n\r\n            <div className=\"spinner-grow text-dark\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </center>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Spinner;\r\n","import React, {useEffect, useState} from 'react';\nimport Recipe from './components/Recipe';\nimport Spinner from './components/Spinner';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport './Recipe.css';\nimport \"./Spinner.css\";\n\nfunction App() {\n  const APP_ID = \"ba330160\";\n  const APP_KEY = \"25723ae9cc8684354d7691665913f1ab\";\n\n  const [recipes,setRecipies]=useState([]);\n  const [search,setSearch]=useState(\"\");\n  const [query,setQuery]=useState(\"chicken\");\n  const [spin,setSpin]=useState(true);\n\n  useEffect(()=>{\n    getRecipes();\n  },[query]);\n\n    const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    const data = await response.json();\n    setRecipies(data.hits);\n    setInterval(setSpin(false),3000);\n    console.log(data.hits);\n  }\n\n  const searchEvent = (event) => setSearch(event.target.value);\n  const submitEvent = (event) => {\n    event.preventDefault();\n    setQuery(search);\n    setSearch(\"\");\n    setSpin(true);\n  }\n\n  return (\n    <div className=\"App\">\n      <form className=\"search-form\" onSubmit={submitEvent}>\n        <input \n          className=\"search-bar\"\n          type=\"text\"\n          value={search}\n          placeholder=\"Enter your desired Recipe\"\n          onChange={searchEvent}\n        />\n        <button className=\"search-button\" type=\"submit\">Search</button>\n      </form>\n      <div className=\"items\">\n  \n          {spin ? <Spinner/> : \n          recipes.map(recipe=>(\n            <Recipe \n              key={recipe.recipe.label}\n              title={recipe.recipe.label}\n              calories={recipe.recipe.calories}\n              image={recipe.recipe.image}\n              ingredients={recipe.recipe.ingredients}\n              />\n          ))\n        }\n      \n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}